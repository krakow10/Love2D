--Add sound functionfunction playSound(sound)	local audio = love.audio.newSource(sound, "static")	audio:setVolume(options.soundEffectsVolume*0.01)	audio:play()endfunction love.load()	require("player")	require("particles")	require("highscore") 			pause = false		love.graphics.setBackgroundColor(37, 203, 59) 		font = love.graphics.newFont("fonts/VITAMIN_.ttf", 20)	font2 = love.graphics.newFont("fonts/Sansumi-Bold.ttf", 15)	love.graphics.setFont(font)		Menu_Title = love.graphics.newImage("textures/Title.png")	Menu_Button = love.graphics.newImage("textures/Button.png")	Menu_ButtonSel = love.graphics.newImage("textures/ButtonSelected.png")	GameOver = love.graphics.newImage("textures/GameOver.png") 	Glow = love.graphics.newImage("textures/Glow.png") 	MapTemp = love.graphics.newImage("textures/MapTemplate.png")	Particle = love.graphics.newImage("textures/Particle.png")	Particle1 = love.graphics.newImage("textures/Particle1.png") 	Line = love.graphics.newImage("textures/Line.png")	WaveAbility = love.graphics.newImage("textures/RadioactiveWave.png")	SpeedPowerup = love.graphics.newImage("textures/SpeedPowerup.png")	Arrow = love.graphics.newImage("textures/ArrowDown.png")	Star = love.graphics.newImage("textures/Star.png")	SmallGlow = love.graphics.newImage("textures/SmallGlow.png")	Options = love.graphics.newImage("textures/Options.png")	Controls = love.graphics.newImage("textures/Controls.png") 		BGColors = {{203, 59, 37},				{37, 183, 205},				{37, 203, 59},				{142, 37, 203}}					lastBG = 0	BGColor = 0	flashDir = 1	flash = false	flashAlpha = 0	flashDelay = 1	flashMode = nil	options = {		music = true,		soundEffects = true,		quality = "high",		musicVolume = 100,		soundEffectsVolume = 100,		setMusicVolume = false,		setSoundEffectsVolume = false,		up = "w",		down = "s",		right = "d",		left = "a",		up2 = "up",		down2 = "down",		right2 = "right",		left2 = "left", 		ability = 32,		pause = 112,		quit = 27		} 			sounds = {	menuClick = love.sound.newSoundData("sounds/MenuClick.ogg"),	menuSelect = love.sound.newSoundData("sounds/MenuSelect.ogg"), 	powerup = love.sound.newSoundData("sounds/Powerup.ogg"),	slimeATK = love.sound.newSoundData("sounds/slimeATK.ogg"),	explosion = love.sound.newSoundData("sounds/Explosion.ogg"),	woosh = love.sound.newSoundData("sounds/Woosh.ogg"),	zap = love.sound.newSoundData("sounds/Zap.ogg"), 	menu = love.audio.newSource("sounds/Menu.ogg"),	mapMusic = {love.audio.newSource("sounds/BeatLoop.ogg"), 				love.audio.newSource("sounds/CalmLoop.ogg"), 				love.audio.newSource("sounds/DreamyLoop.ogg"), 				love.audio.newSource("sounds/ElectricLoop.ogg"),				love.audio.newSource("sounds/SlowElectricLoop.ogg")}	}		sounds.menu:setLooping(true)	for _, v in ipairs(sounds.mapMusic) do		v:setLooping(true)	end	love.audio.play(sounds.menu) 	currentSong = sounds.menu		buttons = {	{selected = false, played = false},	{selected = false, played = false},	{selected = false, played = false},	{selected = false, played = false},	{selected = false, played = false},	{selected = false, played = false},	{selected = false, played = false},	{selected = false, played = false},	{selected = false, played = false}}	pos = 93	t = 0	typeMode = false	r = 0	lastSong = 0	name = "" 	    ----------------------------------------------	help = {	"   Welcome to Slime Ball by spynaz. The",	"objective of this game is to eat blobs that",	"are smaller than your size. If you eat a blob",	"that's bigger than you, you die. The more you",	"eat, the more points you get and the faster",	"the blobs come out.",	"", 	"    There are powerups and abilities that spawn", 	"every 30-60 seconds. When you pick up a",  	"powerup, it automatically activates and",	"effects you. Abilities wont activate until",	"you activate them. Abilities affect the blobs.", 	"",	"",	"Use W A S D to move.",	"Click space to active an ability.",	"P to pause or unpause.",	"Esc to quit game."}	lastLine = -150		highscore.set("Score", 10)		if love.filesystem.exists("Score") then	else		highscore.set("Score", 0, "", 0) 	end 			--Load player 	player.load()end --Round a number functionfunction math.round(n, deci) deci = 10^(deci or 0) return math.floor(n*deci+.5)/deci end--Draw everythingfunction love.draw()	local width = love.graphics.getWidth()	local height = love.graphics.getHeight()		love.graphics.setLineWidth(1)	love.graphics.setColor(255, 255, 255, 255)		love.graphics.draw(MapTemp, 0, 0) 	if player.gamemode == "menu" then			pos = 93		t = 0			love.graphics.setColor(255, 255, 255, 255)		if MouseOver(love.mouse.getX(), love.mouse.getY(), 1, 1, (width/2)-80, (height/2)-80, 160, 50) and not pause then			love.graphics.draw(Menu_ButtonSel, (width/2)-100, (height/2)-100)			buttons[1].selected = true		else			love.graphics.draw(Menu_Button, (width/2)-100, (height/2)-100)			buttons[1].selected = false		end 				if MouseOver(love.mouse.getX(), love.mouse.getY(), 1, 1, (width/2)-80, (height/2)-20, 160, 50) and not pause then			love.graphics.draw(Menu_ButtonSel, (width/2)-100, (height/2)-40)			buttons[2].selected = true		else			love.graphics.draw(Menu_Button, (width/2)-100, (height/2)-40)			buttons[2].selected = false		end 				if MouseOver(love.mouse.getX(), love.mouse.getY(), 1, 1, (width/2)-80, (height/2)+40, 160, 50)and not pause then			love.graphics.draw(Menu_ButtonSel, (width/2)-100, (height/2)+20) 			buttons[3].selected = true		else			love.graphics.draw(Menu_Button, (width/2)-100, (height/2)+20)			buttons[3].selected = false		end				if MouseOver(love.mouse.getX(), love.mouse.getY(), 1, 1, (width/2)-80, (height/2)+100, 160, 50)and not pause then			love.graphics.draw(Menu_ButtonSel, (width/2)-100, (height/2)+80)			buttons[4].selected = true		else			love.graphics.draw(Menu_Button, (width/2)-100, (height/2)+80)			buttons[4].selected = false		end 				love.graphics.draw(Menu_Title, (width/2)-300, (height/2)-250)		love.graphics.setColor(0, 0, 0, 255)		love.graphics.print("Play", (width/2)-27, (height/2)-65)		love.graphics.print("Help", (width/2)-27, (height/2)-5)		love.graphics.print("Options", (width/2)-50, (height/2)+55)		love.graphics.print("Exit", (width/2)-27, (height/2)+115)	elseif player.gamemode == "playing" then		drawParticles()		drawPlayer()		explosions.draw()	elseif player.gamemode == "gameover" then		drawParticles() 		love.graphics.setColor(150, 150, 150, 150)		love.graphics.rectangle("fill", 0, 0, width, height)				love.graphics.setColor(0, 0, 0, t)		love.graphics.draw(GameOver, (width/2)-250, (height/2)-pos)				if pos >= 250 and t >= 255 then			typeMode = true			love.graphics.setColor(0, 0, 0, 255)			love.graphics.print("Your score: "..player.score, (width/2)-100, (height/2)-100)			love.graphics.print("Your name:", (width/2)-100, (height/2)-50)			love.graphics.rectangle("line", (width/2)-100, (height/2)-20, 170, 20)			love.graphics.print(name, (width/2)-100, (height/2)-20) 						if MouseOver(love.mouse.getX(), love.mouse.getY(), 1, 1, (width/2)-50, (height/2)+40, 50, 20) and not pause then				love.graphics.setColor(255, 0, 0, 255)				buttons[5].selected = true			else				love.graphics.setColor(0, 0, 0, 255)				buttons[5].selected = false			end 			love.graphics.print("Skip", (width/2)-50, (height/2)+40) 						if MouseOver(love.mouse.getX(), love.mouse.getY(), 1, 1, (width/2)+80, (height/2)-20, 80, 20)and not pause then				love.graphics.setColor(255, 0, 0, 255)				buttons[6].selected = true			else				love.graphics.setColor(0, 0, 0, 255)				buttons[6].selected = false			end			love.graphics.print("Submit", (width/2)+80, (height/2)-20) 		end	elseif player.gamemode == "highscores" then		love.graphics.setColor(0, 0, 0, 255)		for i, score, name in highscore() do		love.graphics.print(i..". "..name, (width/2)-150, (i * 40)+50)		love.graphics.print(score, (width/2)+100, (i * 40)+50)		end 				love.graphics.print("High Scores", (width/2)-100, (height/height)+40)		love.graphics.print("-----------------", (width/2)-110, (height/height)+70)				if MouseOver(love.mouse.getX(), love.mouse.getY(), 1, 1, (width/2)+150, (height/2)+250, 130, 20) and not pause then			love.graphics.setColor(255, 0, 0, 255)			buttons[7].selected = true		else			love.graphics.setColor(0, 0, 0, 255)			buttons[7].selected = false		end 		love.graphics.print("Play Again", (width/2)+150, (height/2)+250)				if MouseOver(love.mouse.getX(), love.mouse.getY(), 1, 1, (width/2)-300, (height/2)+250, 130, 20) and not pause then			love.graphics.setColor(255, 0, 0, 255)			buttons[8].selected = true		else			love.graphics.setColor(0, 0, 0, 255)			buttons[8].selected = false		end		love.graphics.print("Main Menu", (width/2)-300, (height/2)+250)			elseif player.gamemode == "options" then		love.graphics.setColor(255, 255, 255, 255)		love.graphics.draw(Options, (width/2)-280, (height/2)-250)		love.graphics.setColor(0, 0, 0) 		love.graphics.print("Music:", (width/2)-150, (height/2)-100)		love.graphics.print("Sound Effects:", (width/2)-250, (height/2)-50)		love.graphics.print("Quality:", (width/2)-170, (height/2)) 				--Music bar		if not options.music then			love.graphics.setColor(150, 150, 150, 150)		else			love.graphics.setColor(0, 0, 0, 255)			love.graphics.print("x", (width/2)+110, (height/2)-100)		end		love.graphics.rectangle("fill", (width/2)-50, (height/2)-95, options.musicVolume, 10)		love.graphics.print(options.musicVolume, (width/2)+60, (height/2)-100)		love.graphics.rectangle("line", (width/2)-50, (height/2)-95, 100, 10)				--Sound effect bar		if not options.soundEffects then			love.graphics.setColor(150, 150, 150, 150)		else			love.graphics.setColor(0, 0, 0, 255)			love.graphics.print("x", (width/2)+110, (height/2)-50) 		end 		love.graphics.rectangle("fill", (width/2)-50, (height/2)-45, options.soundEffectsVolume, 10)		love.graphics.print(options.soundEffectsVolume, (width/2)+60, (height/2)-50)		love.graphics.rectangle("line", (width/2)-50, (height/2)-45, 100, 10)				love.graphics.setColor(0, 0, 0, 255)		love.graphics.rectangle("line", (width/2)+110, (height/2)-100, 17, 17)		love.graphics.rectangle("line", (width/2)+110, (height/2)-50, 17, 17)				sounds.menu:setVolume(options.musicVolume*0.01)		for _, v in ipairs(sounds.mapMusic) do			v:setVolume(options.musicVolume*0.01)		end							if options.quality == "low" then 			love.graphics.setColor(255, 0, 0)		else			love.graphics.setColor(0, 0, 0)		end		love.graphics.print("low", (width/2)-50, (height/2))				if options.quality == "medium" then 			love.graphics.setColor(255, 0, 0)		else			love.graphics.setColor(0, 0, 0)		end		love.graphics.print("medium", (width/2)+40, (height/2))				if options.quality == "high" then 			love.graphics.setColor(255, 0, 0)		else			love.graphics.setColor(0, 0, 0)		end		love.graphics.print("high", (width/2)+180, (height/2))				if MouseOver(love.mouse.getX(), love.mouse.getY(), 1, 1, (width/2)-50, (height/2)+200, 130, 20) and not pause then			love.graphics.setColor(255, 0, 0, 255)			buttons[9].selected = true		else			love.graphics.setColor(0, 0, 0, 255)			buttons[9].selected = false		end		love.graphics.print("Main Menu", (width/2)-50, (height/2)+200)	elseif player.gamemode == "help" then		love.graphics.setColor(255, 255, 255, 255)		love.graphics.draw(Menu_Button, (width/2)-100, (height/2)-100)		love.graphics.draw(Menu_Button, (width/2)-100, (height/2)-40)		love.graphics.draw(Menu_Button, (width/2)-100, (height/2)+20)		love.graphics.draw(Menu_Button, (width/2)-100, (height/2)+80)				love.graphics.draw(Menu_Title, (width/2)-300, (height/2)-250)		love.graphics.setColor(0, 0, 0, 255)		love.graphics.print("By spynaz", (width/2)+100, (height/2)-120)		love.graphics.print("Play", (width/2)-27, (height/2)-65)		love.graphics.print("Help", (width/2)-27, (height/2)-5)		love.graphics.print("Options", (width/2)-50, (height/2)+55)		love.graphics.print("Exit", (width/2)-27, (height/2)+115)				love.graphics.setColor(0, 0, 0, 200) 		love.graphics.rectangle("fill", (width/2)-250, (height/2)-200, 500, 400)		love.graphics.setColor(0, 0, 0, 255)		love.graphics.rectangle("fill", (width/2)+210, (height/2)-190, 20, 20)		if MouseOver(love.mouse.getX(), love.mouse.getY(), 1, 1, (width/2)+210, (height/2)-190, 20, 20) and not pause then			love.graphics.setColor(255, 0, 0, 255)		else			love.graphics.setColor(255, 255, 255, 255)		end 		love.graphics.setLineWidth(3)		love.graphics.rectangle("line", (width/2)+210, (height/2)-190, 20, 20)		love.graphics.setLineWidth(1)		love.graphics.print("X", (width/2)+211, (height/2)-190)				love.graphics.setFont(font2)		love.graphics.setColor(255, 255, 255, 255) 		for _, v in ipairs(help) do			love.graphics.print(v, (width/2)-200, (height/2)+lastLine)			lastLine = lastLine + 15		end		lastLine = -150 		love.graphics.setFont(font)	end		if pause then		love.graphics.setColor(0, 0, 0, 200)		love.graphics.rectangle("fill", (width/2)-100, (height/2)-100, 200, 60)		love.graphics.setColor(255, 255, 255, 255)		love.graphics.print("Paused", (width/2)-40, (height/2)-80) 	end		if flash then		love.graphics.setColor(0, 0, 0, flashAlpha)		love.graphics.rectangle("fill", 0, 0, width, height)	endendfunction tweenPos(dt)	if not pause then		if pos >= 250 and t >= 255 then			pos = 250			t = 255		else			pos = pos + 100 * dt			t = t + 160 * dt		end	end end--Update everythingfunction love.update(dt)	if flash and not pause then		if flashDir == 1 then			if flashAlpha >= 255 then				flashDir = -1				flashAlpha = 255				player.gamemode = flashMode				love.graphics.setBackgroundColor(BGColors[BGColor])			else				flashAlpha = flashAlpha + (255/(flashDelay/2)) * dt			end		elseif flashDir == -1 then			if flashAlpha <= 0 then				flash = false				flashDir = 1				flashAlpha = 0			else				flashAlpha = flashAlpha - (255/(flashDelay/2)) * dt			end		end 	end	if player.gamemode == "playing" or player.gamemode == "gameover" then		updateParticles(dt)		if player.gamemode == "gameover" then			tweenPos(dt)		end				if player.gamemode ~= "gameover" then			updatePlayer(dt)		end 	else		pos = 93		t = 0		particles.clear()		player.load()	end		for _, v in ipairs(buttons) do		if v.selected then			if not v.played then				playSound(sounds.menuSelect)				v.played = true			end		else			v.played = false		end	end		if options.setMusicVolume then		options.musicVolume = math.floor(love.mouse.getX()-(love.graphics.getWidth()/2)+50)		if options.musicVolume > 100 then			options.musicVolume = 100		elseif options.musicVolume < 0 then			options.musicVolume = 0		end 	end		if options.setSoundEffectsVolume then		options.soundEffectsVolume = math.floor(love.mouse.getX()-(love.graphics.getWidth()/2)+50)		if options.soundEffectsVolume > 100 then			options.soundEffectsVolume = 100		elseif options.soundEffectsVolume < 0 then			options.soundEffectsVolume = 0		end 	endend--Check for any keys pressedfunction love.keypressed(key,unicode)	if player.gamemode == "gameover" then		if typeMode and unicode ~= 0 and unicode ~= 8 and unicode ~= 13 and string.len(name) < 13 and not pause then			name = name..string.char(unicode)		elseif typeMode and unicode == 8 and not pause then			name = string.sub(name, 1, string.len(name)-1)		elseif unicode == 13 and name ~= "" and not pause then			love.audio.stop(sounds.mapMusic[r])			highscore.add(name, player.score)			typeMode = false			name = ""			player.gamemode = "highscores"			spawnSpeed = 1		end	end 		if player.gamemode == "playing" and not pause then		if unicode == options.ability and player.ability ~= "-" then			explode(player.x, player.y, player.width*2, 0, 200, "ability")			table.insert(activeAbilities, {name = player.ability})			player.ability = "-" 		end	end	if unicode == options.pause and player.gamemode ~= "highscores" and player.gamemode ~= "gameover" then 		if pause then			pause = false			love.audio.play(currentSong)		else			pause = true			love.audio.stop(currentSong)		end 	end 		if unicode == options.quit then		love.audio.stop(currentSong)		highscore.save()		love.event.push("quit")	end 		if key == "f11" then		local s = love.graphics.newScreenshot()		s:encode("pic.bmp")	endend--Check for mouse being clickedfunction love.mousepressed(x, y, button)local width = love.graphics.getWidth()local height = love.graphics.getHeight()	if button == "l" and not pause then		if player.gamemode == "menu" then			if MouseOver(x, y, 1, 1, (width/2)-80, (height/2)-80, 160, 50) and not flash then				playSound(sounds.menuClick)				abilityDelay = 0				powerupDelay = 0				love.audio.stop(sounds.menu)				repeat				r = math.random(1, 5)				BGColor = math.random(1, 4)				until r ~= lastSong and BGColor ~= lastBGColor				lastSong = r				lastBGColor = BGColor				love.audio.play(sounds.mapMusic[r])				currentSong = sounds.mapMusic[r]				flash = true				flashMode = "playing"  			elseif MouseOver(x, y, 1, 1, (width/2)-80, (height/2)+100, 160, 50) then 				love.audio.stop(sounds.menu)				playSound(sounds.menuClick)				highscore.save()				love.event.push("quit")			elseif MouseOver(x, y, 1, 1, (width/2)-80, (height/2)+40, 160, 50) then				player.gamemode = "options" 			elseif MouseOver(x, y, 1, 1, (width/2)-80, (height/2)-20, 160, 50) then				player.gamemode = "help"			end		elseif player.gamemode == "gameover" then			if pos >= 250 and t >= 255 then				if MouseOver(x, y, 1, 1, (width/2)-50, (height/2)+40, 50, 20) then					love.audio.stop(sounds.mapMusic[r])					playSound(sounds.menuClick)					typeMode = false					name = ""					player.gamemode = "highscores"					spawnSpeed = 1				elseif MouseOver(x, y, 1, 1, (width/2)+80, (height/2)-20, 80, 20) and name ~= "" then					love.audio.stop(sounds.mapMusic[r])					highscore.add(name, player.score)					typeMode = false					name = ""					player.gamemode = "highscores"					spawnSpeed = 1				end			end		elseif player.gamemode == "highscores" then			if MouseOver(x, y, 1, 1, (width/2)+150, (height/2)+250, 130, 20) and not flash then				playSound(sounds.menuClick)				abilityDelay = 0				powerupDelay = 0				repeat				r = math.random(1, 5)				BGColor = math.random(1, 4)				until r ~= lastSong and BGColor ~= lastBGColor				lastSong = r				lastBGColor = BGColor				love.audio.play(sounds.mapMusic[r])				currentSong = sounds.mapMusic[r]				flash = true				flashMode = "playing"			elseif MouseOver(x, y, 1, 1, (width/2)-300, (height/2)+250, 130, 20) and not flash then 				playSound(sounds.menuClick)				love.audio.play(sounds.menu)				BGColor = 3				flash = true				flashMode = "menu"			end		elseif player.gamemode == "options" then			if MouseOver(x, y, 1, 1, (width/2)-50, (height/2)-95, 100, 10) then				options.music = true				options.setMusicVolume = true 			elseif MouseOver(x, y, 1, 1, (width/2)-50, (height/2)-45, 100, 10) then				options.soundEffects = true				options.setSoundEffectsVolume = true			elseif MouseOver(x, y, 1, 1, (width/2)+110, (height/2)-100, 17, 17) then				if not options.music then					options.music = true					options.musicVolume = 100				elseif options.music then					options.music = false					options.musicVolume = 0 				end			elseif MouseOver(x, y, 1, 1, (width/2)+110, (height/2)-50, 17, 17) then				if not soundEffects then					options.soundEffects = true					options.soundEffectsVolume = 100				elseif options.soundEffects then					options.soundEffects = false					options.soundEffectsVolume = 0				end 			elseif MouseOver(x, y, 1, 1, (width/2)-50, (height/2), 50, 20) then				options.quality = "low"			elseif MouseOver(x, y, 1, 1, (width/2)+40, (height/2), 90, 20) then				options.quality = "medium"			elseif MouseOver(x, y, 1, 1, (width/2)+180, (height/2), 50, 20) then				options.quality = "high"			elseif MouseOver(x, y, 1, 1, (width/2)-50, (height/2)+200, 130, 20) then				player.gamemode = "menu" 			end		elseif player.gamemode == "help" then			if MouseOver(x, y, 1, 1, (width/2)+210, (height/2)-190, 20, 20) then				player.gamemode = "menu"			end		end	endend --Focused/unfocused functionfunction love.focus(bool)	if player.gamemode ~= "highscores" and player.gamemode ~= "gameover" then		pause = true		love.audio.stop(currentSong) 	end end--Mouse released functionfunction love.mousereleased(x, y, button)	if button == "l" then		options.setMusicVolume = false		options.setSoundEffectsVolume = false	endend--Save when exitingfunction love.quit()	highscore.save()end--Check if mouse is over somethingfunction MouseOver(ax1,ay1,aw,ah, bx1,by1,bw,bh)  local ax2,ay2,bx2,by2 = ax1 + aw, ay1 + ah, bx1 + bw, by1 + bh  return ax1 < bx2 and ax2 > bx1 and ay1 < by2 and ay2 > by1end 